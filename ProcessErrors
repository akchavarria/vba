Public Sub ProcessErrors( _
  Optional blnRaiseErrorForDebugging As Boolean _
)
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'DATE       AUTHOR
'8/6/18    Alejandro
'
'PURPOSE
'Displays information about all currently raised errors to the user
'
'PARAMETERS
'   blnRaiseErrorForDebugging    True if an error should be raised for debugging purposes
'
'TICKETS
'Date       Ticket          Description
'8/6/18     NHITAP-36       Review General Ledger Tool
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'Set everything back to normal
    DoCmd.SetWarnings True
    Application.Echo True
    EndLongProcess
    
    'Get information about the error(s)
    Dim strErrors As String
    'No errors
    If DBEngine.Errors.Count = 0 And Err.Number = 0 Then
        MsgBox "ProcessErrors was called, but no errors were detected.", vbCritical + vbOKOnly, "Unknown Error"
        Exit Sub
    'No errors in the errors collection, only in the error object
    ElseIf DBEngine.Errors.Count = 0 Then
        strErrors = "(" & Err.Number & "): " & Err.Description
    'Errors in both the errors collection and the error object
    Else
        'Create message from the error object
        strErrors = "(" & Err.Number & "): " & Err.Description & vbCrLf
        'Create message from the errors collection
        Dim dbeError As Error
        For Each dbeError In DBEngine.Errors
            strErrors = strErrors & "(" & dbeError.Number & "): " & dbeError.Description & vbCrLf
        Next
        'Remove last line break
        strErrors = Left(strErrors, Len(strErrors) - Len(vbCrLf))
    End If
    
    'Display information about the errors
    MsgBox "Error(s) were encountered during execution:" & vbCrLf & vbCrLf & strErrors
    
    'Raise an error for debugging purposes if indicated
    If blnRaiseErrorForDebugging Then
        Err.Raise Err.Number, Err.Source, Err.Description, Err.HelpFile, Err.HelpContext
    End If
End Sub
